<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ffcs.icity.mvc.backstage.wapinfo.dao.WapInfoDao">

   <resultMap id="wapInfoResultMap" type="com.ffcs.icity.mvc.backstage.wapinfo.entity.WapInfo">
          <result property="id" column="ID"/>
          <result property="wapTitle" column="WAP_TITLE"/>
          <result property="wapContent" column="WAP_CONTENT"/>
          <result property="wapKey" column="WAP_KEY"/>
   </resultMap>
   
   	<sql id="wapInfoColumns">
	    <![CDATA[
		ID,WAP_TITLE,WAP_CONTENT,WAP_KEY
	    ]]>
	</sql>
	
	<select id="query"  parameterType="map"  resultMap="wapInfoResultMap">
		select <include refid="wapInfoColumns" />
        from WAP_INFO
		<where>
			      <if test="@Ognl@isNotEmpty(id)">
				  and ID = #{id}
			      </if>
			      <if test="@Ognl@isNotEmpty(wapTitle)">
				  and WAP_TITLE = #{wapTitle}
			      </if>
			      <if test="@Ognl@isNotEmpty(wapContent)">
				  and WAP_CONTENT = #{wapContent}
			      </if>
			      <if test="@Ognl@isNotEmpty(wapKey)">
				  and WAP_KEY = #{wapKey}
			      </if>
		</where>
		order by ID desc
	</select>

	<select id="get" parameterType="long" resultMap="wapInfoResultMap">		
		select <include refid="wapInfoColumns" />
	    <![CDATA[
		    from WAP_INFO where ID = #{id} 
	    ]]>
	</select>
	
	<select id="getWapInfoByKey" parameterType="string" resultMap="wapInfoResultMap">		
		select <include refid="wapInfoColumns" />
	    <![CDATA[
		    from WAP_INFO where WAP_KEY = #{wapKey} limit 1
	    ]]>
	</select>
	
	<insert id="insert" parameterType="com.ffcs.icity.mvc.backstage.wapinfo.entity.WapInfo" useGeneratedKeys="true" keyProperty="id">        
    <![CDATA[
        insert into  WAP_INFO (
        	WAP_TITLE ,
        	WAP_CONTENT ,
        	WAP_KEY 
        ) values (
        	#{wapTitle},
        	#{wapContent},
        	#{wapKey}
        )
    ]]>  
	</insert>

	<update id="update" parameterType="com.ffcs.icity.mvc.backstage.wapinfo.entity.WapInfo">
	<![CDATA[
		update WAP_INFO set 
	       WAP_TITLE = #{wapTitle},
	       WAP_CONTENT = #{wapContent},
	       WAP_KEY = #{wapKey}
		where  ID = #{id}
	 ]]>
	</update>
	
	<delete id="delete" parameterType="int">
		delete from WAP_INFO where ID = #{id}
	</delete>
	
	<delete id="deletes">
		delete from WAP_INFO where ID in 
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">#{item}</foreach>
    </delete>
	
</mapper> 
